import './polyfills.server.mjs';
import{e as c,f as y}from"./chunk-A54HIVKK.mjs";import{C,L as m,O as w,S as E,m as a,p as b,u as v,w as p}from"./chunk-OC75U52M.mjs";var l="ZBt0rpvcitaLdzvNFv1SVmjbjuDYi21H",u="X-API-KEY",g="https://backend-yacs-code-001-a8crhfeed4hfcbcz.francecentral-01.azurewebsites.net/api",M=class ${constructor(e){this.http=e}modulesAPI={};getAllCoursAPI(){let e=new c({[u]:l}),o=`${g}/parcours`;return this.http.get(o,{headers:e}).pipe(m(r=>{}),p(r=>(console.error("Error fetching all courses:",r),a(()=>r))))}getFormationBySlug(e){return this.getAllCoursAPI().pipe(b(o=>{let r=o.find(t=>t.slug===e);if(!r)throw new Error(`Formation with slug "${e}" not found.`);return r}),C(),p(o=>(console.error(`Error fetching or finding formation with slug "${e}":`,o),a(()=>o))))}getCourseModuleData(e,o,r){let t=r.map(s=>{let n=`assets/courses/${e}/${o}/${s}/1.html`;return this.http.get(n,{responseType:"text"})});return v(t).pipe(b(s=>{let n={};return r.forEach((i,d)=>{n[i]=s[d]}),n}))}getCourseModuleDataHTML(e,o,r){let t=new c({[u]:l}),s=r.map(n=>{let i=`${g}/parcours/${e}/${o}/${n}`;return this.http.get(i,{responseType:"text",headers:t})});return v(s).pipe(b(n=>{let i={Tutoriels:"",QCM:"",Exercices:"",Projets:""};return r.forEach((d,f)=>{i[d]=n[f]}),i}))}getCourseModuleDataJSON(e,o,r){let t=new c({[u]:l}),s=["Exercices","Projets","QCM","Tutoriels"];if(!s.includes(r))return console.error(`Invalid section name: "${r}". Must be one of: ${s.join(", ")}.`),a(()=>new Error(`Invalid section name: "${r}"`));let n=`${g}/parcours/${e}/${o}/${r}/json`;return this.http.get(n,{headers:t}).pipe(p(i=>(console.error(`Error fetching JSON for ${r}:`,i),a(()=>i))))}createFormation(e){let o=new c({[u]:l}),r=`${g}/formation`;return this.http.post(r,e,{headers:o}).pipe(m(t=>console.log("Formation created:",t)),p(t=>(console.error("Error creating formation:",t),a(()=>t))))}deleteFormation(e){let o=new c({[u]:l}),r=`${g}/formation/${e}`;return this.http.delete(r,{headers:o}).pipe(m(()=>console.log("Formation deleted:",e)),p(t=>(console.error("Error deleting formation:",t),a(()=>t))))}updateFormation(e){let o=new c({[u]:l}),r=`${g}/parcours`;return this.http.post(r,e,{headers:o}).pipe(m(t=>console.log("Formation structure updated (via POST /api/parcours):",t)),p(t=>(console.error("Error updating formation structure (via POST /api/parcours):",t),a(()=>t))))}submitQuizAnswers(e,o,r){let t=new c({[u]:l,"Content-Type":"application/json"}),s=`${g}/parcours/${e}/${o}/QCM/`;return this.http.post(s,r,{headers:t}).pipe(p(n=>(console.error("Erreur lors de l\u2019envoi des r\xE9ponses QCM",n),a(()=>n))))}createCoursePartFile(e,o,r,t,s,n="text/html"){let i=new c({[u]:l}),d=new FormData,f=new Blob([s],{type:n});d.append("file",f,t);let F=`${g}/parcours/${e}/${o}/${r}/${t}`;return this.http.post(F,d,{headers:i}).pipe(m(h=>console.log("Course part file created:",h)),p(h=>(console.error("Error creating course part file:",h),a(()=>h))))}updateCoursePartFile(e,o,r,t,s,n="text/html"){let i=new c({[u]:l}),d=new FormData,f=new Blob([s],{type:n});d.append("file",f,t);let F=`${g}/parcours/${e}/${o}/${r}/${t}`;return this.http.put(F,d,{headers:i}).pipe(m(h=>console.log("Course part file updated:",h)),p(h=>(console.error("Error updating course part file:",h),a(()=>h))))}deleteCoursePartFile(e,o,r,t){let s=new c({[u]:l}),n=`${g}/parcours/${e}/${o}/${r}/${t}`;return this.http.delete(n,{headers:s}).pipe(m(()=>console.log("Course part file deleted:",t)),p(i=>(console.error("Error deleting course part file:",i),a(()=>i))))}static \u0275fac=function(o){return new(o||$)(E(y))};static \u0275prov=w({token:$,factory:$.\u0275fac,providedIn:"root"})};export{M as a};
